# This is a basic workflow to help you get started with Actions

name: Run Tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events to main, dev-v, or dev branches
  push:
    branches: [ "main", "dev-v", "dev" ]
  pull_request:
    branches: [ "main", "dev-v", "dev" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "3.14"]
        python-version: ["3.10", "3.11", "3.12", "3.13", "3.14"]
        os: [ubuntu-latest]
        #os: [ubuntu-latest, windows-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Install dependencies (equivalent to pip install -r requirements.txt via pyproject.toml)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      # Make the script executable (Linux only)
      - name: Make script executable
        if: matrix.os == 'ubuntu-latest'
        run: chmod +x ./run_tests.sh

      # Runs the tests script using bash shell for cross-platform compatibility
      - name: Run tests script
        shell: bash
        run: ./run_tests.sh
